레코드
-테이블에 종속되는 실질적인 데이터(행)를 의미
-레코드는 반드시 테이블이 가지고 있는 열의 구조와 제약 조건에 부합해야한다.

-----------------------------------------

삽입하기
-테이블에 레코드를 삽입하기 위해 아래 쿼리를 실행
	INSERT INTO `스키마 이름`.`테이블 이름` ([열 이름, . . .] )
	VALUES ([값, . . . ]);
	   *위 쿼리에서 명시한 열의 순서와 값의 순서는 반드시 일치해야 한다.
	   *단, 명시하는 열의 순서는 테이블이 실제로 가지고 있는 열의 순서와 반드시 일치할 필요는 없다.
	   *테이블이 가지고 있는 모든 열을 반드시 명시할 필요는 없으며, 명시하지 않은 열의 값에 대해서는 해당 열의 기본 값(DEFAULT)을 사용한다.
	   *열 이름을 명시하지 않을 경우 테이블이 가지고 있는 모든 열을 순서대로 적은 것과 같은 의미

-하나의 쿼리로 여러개의 레코드를 삽입하기 위해 아래의 쿼리 실행
	INSERT INTO `스키마 이름`.`테이블 이름` ([열 이름, . . .] )
	VALUES ([값, . . . ]),
		([값, . . . ]),
		([값, . . . ]), . . . ;

-----------------------------------------

선택하기
-테이블이 가지고 있는 레코드를 조회하기 위해 아래 쿼리 실행
	SELECT [*|열이름|리터럴, . . . ]
	FROM `스키마 이름`.`테이블 이름`
	[JOIN . . . ]?
	[WHERE [조건]]?
	[GROUP BY [기준 열]]?
	[ORDER BY [기준 열] [ASC | DESC]?];

	   * (*): 테이블이 가지고 있는 모든 열
	   *WHERE : 주어진 조건에 부합하는 레코드만 선택한다.
	   *GROUP BY : 통계 함수를 사용할때 레코드를 묶어낼 기준 열을 명시. 명시하지 않을 경우, 모든 레코드를 통계 기준으로 한다.
	   *ORDER BY : 선택 결과를 기준 열이 가지는 값에 따라 정렬
		-ASC : 오름차순 정렬, 생략시 기본 값
		-DESC : 내림차순 정렬

JOIN
-현재 조회하고 있는 테이블이 가진 데이터를 활용하여 다른 테이블에 있는 데이터를 함께 조회하고자할때 사용
-조인의 구조는 아래와 같다
	[LEFT | RIGNT | INNER] JOIN `대상 스키마`.`대상 테이블` AS `별명` ON [조건]
	   *조인 대상이되는 테이블이 가지는 레코드 중 조건에 부합하는 레코드를 모두 가져온다
	   *LEFT : FROM 대상이 되는 테이블이 가지는 데이터를 기준으로 선택
	   * RIGHT : JOIN 대상이 되는 테이블이 가지는 데이터를 기준으로 선택
	   * INNER : FROM과 JOIN 대상이 되는 테이블이 가지는 데이터의 교집합을 기준으로 선택

서브 쿼리
-조인과 마찬가지로 다른 테이블에서 데이터를 가지고 오기 위한 목적으로 사용한가. 단, SELECT의 열을 나열하는 구문에서 또다른 SELECT 구문을 활용하며, 단 하나의 열을 나타낼 수 있다는 점이 다르다.
-특정 조건하에 동일 테이블에서  여러개의 열을 가지고 와야하는 상황이라면 조인의 성능이 유리

	SELECT  `c1`,
	           `c2`,
	           (SELECT `sq1`
	           FROM `as`.`at`),
	           `c3`
	FROM `ts`.`tt`;
	   *위와 같이 ts스키마의 tt테이블에서 SELECT 하고 있는 상황에서 다른 테이블인 as 스키마의 at 테이블에 있는 sq1 열 값을 가지고 오기 위해 열 나열 중 서브쿼리를 사용할 수 있다.
	   * 단, 위와 같이 하나의 서브쿼리는 반드시 하나의 열만을 포함 할 수 있다


-----------------------------------------

수정하기
-레코드가 가지고 있는 값을 수정하기 위해 아래 쿼리 실행
	UPDATE `스키마 이름`.`테이블 이름`
	SET [열 이름] = [값] , . . . ;
	   *위 쿼리는 조건 없이 모든 레코드의 값을 수정하는 쿼리임으로 일반적으로 사용하지 않는다.
	   
	   *주로 아래와 같이 WHERE 키워드를 사용하여 수정하고자 하는 레코드를 특정
	UPDATE `스키마 이름`.`테이블 이름`
	SET [열 이름] = [값] , . . . 
	WHERE [조건];

-----------------------------------------

삭제하기
-레코드를 삭제하기 위해 아래 쿼리를 실행
	DELETE
	FROM `스키마 이름`.`테이블 이름`;
	   *위 쿼리는 조건 없이 모든 레코드의 값을 삭제하는 쿼리임으로 일반적으로 사용하지 않는다.

	   *주로 아래와 같이 WHERE 키워드를 사용하여 삭제하고자 하는 레코드를 특정(제한)
	DELETE
	FROM `스키마 이름`.`테이블 이름`
	WHERE [조건];