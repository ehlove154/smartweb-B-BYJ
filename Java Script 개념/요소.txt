요소


window
-자바스크립트의 최상위 객체이면서 브라우저와 관련된, HTML 문서 및 이를 초월하는 멤버를 모두 가지고 있다.
-전역적으로 사용할 수 있는 대상이 모두 window객체의 멤버로 할당되어 있다.

document
-window의 멤버로 HTML문서 (<html>부터 </html>까지)에 대한 멤버를 가지는 객체
-속성
	*head : <head> 태그에 대한 멤버를 가지는 객체
	*body : <body> 태그에 대한 멤버를 가지는 객체
-함수
	*createElement(x) : 태그의 종류가 x인 가상의 요소를 만들어 반환한다.
	*getElementById(x) : HTML id 속성 값으로 문자열인 x를 가지는 요소를 선택하여 반환. 그러한 요소가 없다면 null을 반환

HTMLElement
-HTML의 모든 태그를 자바스크립트 객체로 표현하기 위한 타입
-객체 속성
	*classList : 해당 요소의 HTML class 속성과 관련된 멤버를 가지고 있는 속성
		-add(x) : 해당요소의 class 속성에 x를 추가한다. 이미 있다면 중복되게 추가하지는 않음
		-contains(x) : 해당요소의 class 속성에 x를 포함하는가의 여부를 반환한다.
		-remove(x) : 해당요소의 class 속성에서 x를 제거한다.
		-toggle(x) :  해당요소의 class 속성이 x를 가지고 있다면 제거하고, 없다면 추가한다.
	
	*dataset : 해당 요소의 사용자 지정 데이터를 가져오거나 지정하기 위한 속성. 오브젝트 속성 접근 연산자를 활용하여 해당 요소가 가지고 있는 data-* 속성의 이름으로 값에 접근할 수 있다. 단, 접근시 이름을 카멜케이스화 하여야 함에 유의.(ex> data-member-name 속성에 접근시 dataset[`memberName`]로 접근)
	*innerHTML : 해당 요소의 내부 HTML 코드인 문자열이다. 자동으로 닫는 태그의 경우 빈 문자열( ' ' )이다.
	*innerText :  해당 요소의 내부 텍스트(내용)이다. 자동으로 닫는 태그의 경우 빈 문자열( ' ' )이다.
	*style : 해당 요소의 CSS와 관련된 멤버를 가지고 있는 속성이다. 해당 속성 사용시, 해당 요소의 style속성이 부여된다. 해당 속성의 멤버의 명명은 실제 CSS속성을 카멜케이스화 한 것임에 유의한다. (ex> background-color는 backgroundColor로 접근)

-객체 함수
	*addEventListener(e, f) : 호출 대상인 요소에 이벤트 e가 발생했을 때 함수 f를 실행하기 위한 이벤트 리스너를 추가
	ex> loginForm[`em`].addEventListener(`click`, (evt ) => {
   		 console.log(`Hello`);
	      });
	*removeEventListener(e, f) : 호출 대상인 요소가 가지고 있는 이벤트 리스너 중 이벤트의 종류가 e이고, 함수가 f인 이벤트 리스너를 제거. 여기서 제거할 함수 f는 이벤트 리스너 추가(addEventListener)시 사용한 함수와 동일한 함수를 가리켜야한다.

	*append(...x) : 호출 대상인 요소의 마지막 자식이 될 수 있도록 한 개 이상의 요소 x를 추가한다.
	*prepend(...x) : 호출 대상인 요소의 첫번째 자식이 될 수 있도록 한 개 이상의 요소 x를 추가한다.
	*querySelector(x) : 호출 대상이 되는 대상의 자식 혹은 자손이면서 CSS 선택자인 문자열 x를 가장 빨리 만족하는 요소 한 개를 반환. 그러한 요소가 없다면 null반환
	*querySelectorAll(x) : 호출 대상이 되는 대상의 자식 혹은 자손이면서 CSS 선택자인 문자열 x를 만족하는 요소 전체를 인자로 가지는 유사 배열 객체 NodeList  반환. 그러한 요소가 없다면 길이가 0인 유사 배열 객체 NodeList 반환
	*getAttribute(x) : 호출 대상이 되는 요소가 가지고 있는 HTML 속성 중 이름이 x인 것의 값을 문자열로 반환. 그러한 속성이 없다면 null을 반환.
	*setAttribute(n, v) : 호출 대상이 되는 요소에 이름은 n이고 값은 v인 속성을 추가/지정한다. 속성 값이 없다하더라도 v는 누락하여서는 안 되며, 빈 문자열( ' ' )로 처리하여야 한다.
	*hasAttribute(x) : 호출 대상이 되는 요소가 이름이 x인 속성을 가지고 있는가의 여부를 반환
	*removeAttribute(x) : 호출 대상이 가지고 있는 속성 중 이름이 x인 속성을 제거
	
	*이벤트의 종류(e)
		-click : 클릭했을 때의 이벤트
		-mousedown : 마우스 버튼을 눌렀을때의 이벤트
		-mouseup : 마우스 버튼을 뗐을때의 이벤트
		-mousemove : 마우스 커서가 움직일때의 이벤트
		-mouseenter : 마우스 커서가 해당 요소의 밖에 있다가 내부에 진입했을때의 이벤트
		-mouseleave : 마우스 커서가 해당 요소의 안에 있다가 외부로 나갔을때의 이벤트
		-wheel : 마우스 휠이 돌아갔을 때의 이벤트
		-focusin : 포커스를 가질 수 있는 요소가 포커스를 가지게 되었을 때 
		-focusout : 포커스를 가질 수 있는 요소가 포커스를 잃게 되었을 때
		-keydown : 키보드의 키가 눌렸을 때의 이벤트
		-keyup : 키보드의 키가 눌렸다가 떼졌을 때의 이벤트

HTMLFormElement (form태그 만을 위한 타입)
-HTML <form>태그를 자바스크립트 객체로 표현하기 위한 타입
-해당 타입의객체에 오브젝트 속성 접근 연산자 ( [ ] )를 활용하여 이가 가지는 입력 태그(button, input, select, textarea)의 name 속성 값을 문자열로 주면 해당 요소가 연산된다.