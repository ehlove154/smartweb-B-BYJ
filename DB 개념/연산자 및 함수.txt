연산자


사칙 연산자
- (+) : a + b꼴에서 a와 b의 합
- (-) :  a - b꼴에서 a에서 b를 뺀 값 
- (*) :  a * b꼴에서 a와 b의 곱
- (/) :  a / b꼴에서 a를 b로 나눈 몫
- (%) 혹은 MOD :  a % b 혹은 a MOD b 꼴에서 a를 b로 나눈 나머지

비교 연산자
- (=) : `a = b` 꼴에서 a와 b가 같은가의 여부
- (!=) 혹은 (<>) : `a != b` 혹은 `a<>b` 꼴에서 a와 b가 다른가의 여부
- (>) : `a > b` 꼴에서 a가 b보+다 큰가의 여부
- (<) : `a < b` 꼴에서 a가 b보다 작은가의 여부
- (>=) : `a >= b` 꼴에서 a가 b보다 크거나 같은가의 여부
- (<=) : `a <= b` 꼴에서 a가 b보다 작거나 같은가의 여부
 
논리연산자
- && 혹은 AND : `a && b` 혹은 `a AND b` 꼴에서 a와 b가 모두 true인가의 여부
- || 혹은 OR : `a || b` 혹은 `a OR b` 꼴에서 a와 b중 하나가 true인가의 여부

기타 연산자
- IN : `a IN (b, . . .)` 꼴에서 a가 후행하는 값의 나열 b에 포함되는가의 여부
- NOT IN : `a NOT IN (b, . . . )` 꼴에서 a가 후행하는 값의 나열 b에 포함되지 않는가의 여부
- BETWEEN . . . AND . . . : `a BETWEEN b AND c` 꼴에서 a가 b 이상이고 c이하인가의 여부. a >= b AND a <= c와 같다.
- NOT BETWEEN . . . AND . . . : `a NOT BETWEEN b AND c` 꼴에서 a가 b 미만이거나 c초과인가의 여부. a < b OR a > c와 같다.
- IS NULL : `a IS NULL` 꼴에서 a가 NULL인가의 여부
- IS NOT NULL : `a IS NOT NULL` 꼴에서 a가 NULL이 아닌가의 여부
- LIKE : `a LIKE b` 꼴에서 문자열 a가 패턴 b에 부합하는 가의 여부
	*패턴은 문자열로 작성한다.
	*패턴에서 %는 0자 이상의 아무 문자이다.
	*패턴에서 _는 1자의 아무 문자이다.
	*패턴에서 리터럴 %는 \%로, 리터럴 _는 \_로, 리터럴 \는 \\로 이스케이프한다.
- NOT LIKE : `a NOT LIKE b` 꼴에서 문자열 a가 패턴 b에 부합하지 않는 가의 여부


------------------------------------------------------------------

함수


수학 함수
- ABS(x) : x의 절대값을 반환
- MOD(x, y) : x MOD y의 결과를 반환
- POW(x, y) : x의 y제곱을 반환
- SQRT(x) : x의 제곱근을 반환
- CEIL(x) : x를 정수부까지 올림하여 반환
- FLOOR(x) : x를 정수부까지 내림하여 반환
- ROUND(x) : x를 정수부까지 반올림하여 반환
- TRUNCATE(x, y) : x가 가진 y자리 미만의 소수점을 버리고 반환
- RAND() : 0이상 1미만의 무작위 실수를 반환

논리 함수
- IF(c, t, f) : 조건 c가 true일때 t를, false일때 f를 반환
- IFNULL(x, a) : x가 NULL이라면 a를, 아니라면 x를 그대로 반환

문자 함수
- LENGTH(x) : 문자열 x의 바이트 크기를 반환
- CHAR_LENGTH(x) : 문자열 x의 문자 개수를 반환
- CONCAT(x, . . . ) : 한 개 이상의 인자 x를 이어 붙인 문자열을 반환
- CONCAT_WS(d, x, . . . ) : 한 개 이상의 인자 x를 d로 이어 붙인 문자열을 반환
- LCASE(x) 혹은 LOWER(x) : 문자열 x가 가지는 모든 라틴 문자를 소문자화 하여 반환
- UCASE(x) 혹은 UPPER(x) : 문자열 x가 가지는 모든 라틴 문자를 대문자화 하여 반환
- MID(x, y, z) 혹은 SUBSTR(x, y, z) 혹은 SUBSTRING(x, y, z) : 문자열 x가 가지는 문자 중 y 번째 문자를 포함, 후행하는 z개의 문자를 반환
	* 문자열 x에서 문자의 순번은 1번 부터 시작함에 유의
	* 선택할 문자의 개수인 z를 생략할 경우 끝까지 선택한다.
- LEFT(x, y) : 문자열 x의 선행문자 y개를 반환
- RIGHT(x, y) : 문자열 x의 후행문자 y개를 반환
- REPEAT(x, y) : 인자 x를 y번 반복한 문자열을 반환
- REPLACE(x, f, t) : 문자열 x에서 f를 찾아 t로 치환하여 반환
- REVERSE(x) : 문자열 x를 뒤집어서 반환 
- TRIM (x) : 문자열 x의 선/후행 공백을 모두 제거하여 반환
- LTRIM (x) : 문자열 x의 선행 공백을 모두 제거하여 반환
- RTRIM (x) : 문자열 x의 후행 공백을 모두 제거하여 반환

날짜와 시간 함수
- CURDATE() 혹은 CURRENT_DATE() : 현재 날짜 반환
- CURTIME() 혹은 CURRENT_TIME() : 현재 시간 반환
- NOW(x) 혹은 CURRENT_TIMESTAMP(x) : 현재 날짜와 시간을 반환. 여기서 x는 마이크로초의 자리수를 의미하며 생략하면 결과값은 마이크로초를 포함하지 않는다. 최대값은 6
- YEAR(x) : 전달받은 날짜 혹은 일시인 x의 년을 반환
- MONTH(x) : 전달받은 날짜 혹은 일시인 x의 월을 반환
- DAY(x) : 전달받은 날짜 혹은 일시인 x의 일을 반환
- HOUR(x) : 전달받은 시간 혹은 일시인 x의 시를 반환
- MINUTE(x) : 전달받은 시간 혹은 일시인 x의 분을 반환
- SECOND(x) : 전달받은 시간 혹은 일시인 x의 초를 반환
- MICROSECOND(x) : 전달받은 시간 혹은 일시인 x의 마이크로초를 반환
- DATE(x) : 전달받은 일시 x의 날짜를 반환 
- TIME(x) : 전달받은 일시 x의 시간을 반환
- DAYOFWEEK(x) : 전달받은 날짜 혹은 일시 x의 요일을 숫자로 반환. 일요일부터 1로 시작하여 1씩 증가 한다. 토요일은 7
- DAYOFMONTH(x) : DAY()와 동일한 함수
- DAYOFYEAR(x) : 전달받은 날짜 혹은 일시 x가 당해의 몇 번째 날인가를 반환
- DATE_ADD(x. INTERVAL y z) : 일시 x에 z주기인 y만큼을 더한다. 주기는 YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND 등을 사용할 수 있다.
- DATE_SUB(x. INTERVAL y z) : 일시 x에 z주기인 y만큼을 뺀다. 주기는 YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND 등을 사용할 수 있다.

통계 함수
- COUNT(x) : x에 대해 선택되는 레코드의 개수를 반환
- AVG(x) : x에 대해 선택되는 레코드의 평균값을 반환
- SUM(x) : x에 대해 선택되는 레코드의 합계를 반환
- MIN(x) : x에 대해 선택되는 레코드가 가지는 값 중 가장 작은 값을 반환
- MAX(x) : x에 대해 선택되는 레코드가 가지는 값 중 가장 큰 값을 반환