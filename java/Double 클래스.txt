Double 클래스
-java.lang.Double 클래스는 double 타입과 관련된 편의 기능을 제공하고, 해당 타입 자체가 double 타입의 리터럴로 작동할 수 있는 double의 래퍼(wrapper) 클래스
-Double가 가지는 실질적인 값은 double이나, 이는 참조 타입임으로 null을 할당 받을 수 있다.

----------------------------------------------------

정적 멤버 변수
-MAX_VALUE : double 타입이 가질 수 있는 가장 큰 값
-MIN_VALUE : double 타입이 가질 수 있는 가장 작은 값
-NaN : 숫자가 아닌 값(Not a Number). 내부적으로 0.0 / 0 연산으로 구현되어 있다.
-NEGATIVE_INFINITY : 음의 무한대. 내부적으로 -1.0 / 0 연산으로 구현
-POSITIVE_INFINITY : 양의 무한대. 내부적으로 1.0 / 0 연산으로 구현

----------------------------------------------------

정적 메서드
-isFinite(double d) : d가 유한한가의 여부를 반환. 양/음수를 구분하지 않음
-isInfinite(double d) : d가 무한한가의 여부를 반환. 양/음수를 구분하지 않음
-isNaN(double d) : d가 Double.NaN 인가의 여부를 반환. 어떠한 값이 NaN인가를 검사할때에는 절대로 동/부등(==, !=) 연산을 하지 않도록 한다.
-parseDouble(String s) : 문자열 s를 double타입으로 변환하여 반환. 변환할 수 없는 문자열일 경우 NumberFormatException 예외가 발생
-toString(double d) : d를 문자열로 변환하여 반환

----------------------------------------------------

객체 메서드
-byteValue( ) : 호출 대상이 가진 일반 double 값을 byte 타입으로 변환하여 반환. 오버/언더플로우가 발생할 수 있음
-shortValue( ) : 호출 대상이 가진 일반 double 값을 short 타입으로 변환하여 반환. 오버/언더플로우가 발생할 수 있음
-intValue( ) : 호출 대상이 가진 일반 double 값을 int 타입으로 변환하여 반환. 오버/언더플로우가 발생할 수 있음 
-longValue( ) : 호출 대상이 가진 일반 double 값을 long 타입으로 변환하여 반환. 오버/언더플로우가 발생할 수 있음
-floatValue( ) : 호출 대상이 가진 일반 double 값을 float타입으로 변환하여 반환. 오버/언더플로우가 발생할 수 있음
-doubleValue( ) : 호출 대상이 가진 일반 long 값을 double 타입으로 변환하여 반환.  자동 언박싱(Auto Unboxing)을 지원함으로 long타입의 변수에 해당객체를 할당하여도 해당 메서드가 실행된다. 해당 객체가 null이라면 NullPointerException이 발생
-isInfinity( ) : 호출 대상이 가지고 있는 double 값이 무한한가의 여부를 반환
-isNaN( ) : 호출 대상이 가지고 있는 double 값이 NaN인가의 여부를 반환
-toString( ) : 호출 대상이 가진 double 값을 문자열로 변환하여 반환